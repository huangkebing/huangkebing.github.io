(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{441:function(e,a,r){"use strict";r.r(a);var s=r(2),t=Object(s.a)({},(function(){var e=this,a=e._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("Boxx"),e._v(" "),a("p"),a("div",{staticClass:"table-of-contents"},[a("ul",[a("li",[a("a",{attrs:{href:"#一、前言-问题记录"}},[e._v("一、前言&问题记录")])]),a("li",[a("a",{attrs:{href:"#_1-1-什么是zookeeper"}},[e._v("1.1 什么是Zookeeper")])]),a("li",[a("a",{attrs:{href:"#二、zookeeper安装"}},[e._v("二、Zookeeper安装")])])])]),a("p"),e._v(" "),a("p",[e._v("官方文档："),a("a",{attrs:{href:"https://zookeeper.apache.org/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Apache ZooKeeper"),a("OutboundLink")],1)]),e._v(" "),a("h2",{attrs:{id:"一、前言-问题记录"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一、前言-问题记录"}},[e._v("#")]),e._v(" 一、前言&问题记录")]),e._v(" "),a("p",[e._v("Zookeeper在很多地方都能看到，如kafka集群需要用到、Dubbo也要用到。那么Zookeeper到底是什么？它的作用是什么？它又是怎么实现的呢？")]),e._v(" "),a("p",[e._v("为了解答这些问题，准备学习一下Zookeeper")]),e._v(" "),a("h2",{attrs:{id:"_1-1-什么是zookeeper"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-什么是zookeeper"}},[e._v("#")]),e._v(" 1.1 什么是Zookeeper")]),e._v(" "),a("p",[e._v("Zookeeper的官方文档中有如下定义：")]),e._v(" "),a("p",[e._v("ZooKeeper是分布式应用程序的高性能协调服务。它在一个简单的界面中公开了常见的服务——例如命名、配置管理、同步和组服务——因此您不必从头开始编写它们。您可以使用现成的它来实现共识、组管理、领导者选举和存在协议。您可以根据自己的特定需求在其上进行构建。")]),e._v(" "),a("p",[e._v("此外，经常也能看到Zookeeper可以作为注册中心使用，关于注册中心，通常有如下几个作用")]),e._v(" "),a("ol",[a("li",[e._v("服务注册：服务提供者在启动时将自己的服务信息（如服务名称、IP地址、端口号等）注册到注册中心中。这样其他服务消费者就可以通过注册中心获取可用的服务列表。")]),e._v(" "),a("li",[e._v("服务发现：服务消费者在需要调用某个服务时，向注册中心发送请求，获取可用的服务列表。注册中心会返回可用的服务提供者的地址列表供消费者选择。")]),e._v(" "),a("li",[e._v("负载均衡：注册中心可以根据一定的负载均衡策略将服务请求分配给多个服务提供者，实现对服务请求的均衡分发，提高系统的稳定性和性能。")]),e._v(" "),a("li",[e._v("健康检查：注册中心可以定期检查已注册的服务是否可用，如果发现某个服务不可用或异常，可以将其从注册中心中移除，避免服务消费者调用到不可用的服务。")])]),e._v(" "),a("h2",{attrs:{id:"二、zookeeper安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二、zookeeper安装"}},[e._v("#")]),e._v(" 二、Zookeeper安装")]),e._v(" "),a("p",[e._v("使用Linux环境安装Zookeeper，这里用docker来安装更方便一些")]),e._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[e._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("docker")]),e._v(" search zookeeper\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("mkdir")]),e._v(" /usr/local/zookeeper\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("docker")]),e._v(" run "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-d")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-e")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("TZ")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Asia/Shanghai"')]),e._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-p")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("2181")]),e._v(":2181 "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-v")]),e._v(" /usr/local/zookeeper:/data "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("--name")]),e._v(" zookeeper "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("--restart")]),e._v(" always zookeeper\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br")])])],1)}),[],!1,null,null,null);a.default=t.exports}}]);